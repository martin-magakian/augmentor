// Code generated by protoc-gen-go. DO NOT EDIT.
// source: beeswax/augment/augmentor.proto

/*
Package augment is a generated protocol buffer package.

It is generated from these files:
	beeswax/augment/augmentor.proto

It has these top-level messages:
	AugmentorRequest
	AugmentorResponse
*/
package augment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import openrtb2 "beeswax/openrtb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Stinger will issue a HTTP request to the augmentor.
// The following message will be present in the body of the HTTP request.
type AugmentorRequest struct {
	// Bid request received from the exchange after it has been processed by Beeswax.
	BidRequest       *openrtb2.BidRequest `protobuf:"bytes,1,opt,name=bid_request,json=bidRequest" json:"bid_request,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *AugmentorRequest) Reset()                    { *m = AugmentorRequest{} }
func (m *AugmentorRequest) String() string            { return proto.CompactTextString(m) }
func (*AugmentorRequest) ProtoMessage()               {}
func (*AugmentorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AugmentorRequest) GetBidRequest() *openrtb2.BidRequest {
	if m != nil {
		return m.BidRequest
	}
	return nil
}

// Augmentor will respond to Stinger with a HTTP response.
// The following message will be present in the body of the HTTP response.
// Augmentor can choose not to bid at all in which case it must still
// respond to the HTTP request with a 204 status code.
//
// Also custom bidding agents can receive this data through the augmentor_data field in
// the BidRequestExtension.
type AugmentorResponse struct {
	// Array of Augmentor segments
	Segments         []*AugmentorResponse_Segment `protobuf:"bytes,1,rep,name=segments" json:"segments,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *AugmentorResponse) Reset()                    { *m = AugmentorResponse{} }
func (m *AugmentorResponse) String() string            { return proto.CompactTextString(m) }
func (*AugmentorResponse) ProtoMessage()               {}
func (*AugmentorResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AugmentorResponse) GetSegments() []*AugmentorResponse_Segment {
	if m != nil {
		return m.Segments
	}
	return nil
}

type AugmentorResponse_Segment struct {
	// The Id of an augmentor segment.
	// This field is primarily used for line item targeting.
	// For targeting to work with the segment ids, it is necessary
	// to register the segment ids with Beeswax via the Buzz Segments API.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// This field can be used to pass additional information about the segment
	// that Stinger will forward to the bidding agent.
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AugmentorResponse_Segment) Reset()                    { *m = AugmentorResponse_Segment{} }
func (m *AugmentorResponse_Segment) String() string            { return proto.CompactTextString(m) }
func (*AugmentorResponse_Segment) ProtoMessage()               {}
func (*AugmentorResponse_Segment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *AugmentorResponse_Segment) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *AugmentorResponse_Segment) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*AugmentorRequest)(nil), "augment.AugmentorRequest")
	proto.RegisterType((*AugmentorResponse)(nil), "augment.AugmentorResponse")
	proto.RegisterType((*AugmentorResponse_Segment)(nil), "augment.AugmentorResponse.Segment")
}

func init() { proto.RegisterFile("beeswax/augment/augmentor.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4f, 0x4a, 0x4d, 0x2d,
	0x2e, 0x4f, 0xac, 0xd0, 0x4f, 0x2c, 0x4d, 0xcf, 0x4d, 0xcd, 0x2b, 0x81, 0xd1, 0xf9, 0x45, 0x7a,
	0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xec, 0x50, 0x01, 0x29, 0x59, 0x98, 0xca, 0xfc, 0x82, 0xd4,
	0xbc, 0xa2, 0x92, 0x24, 0x18, 0x0d, 0x51, 0xa7, 0xe4, 0xc1, 0x25, 0xe0, 0x08, 0xd3, 0x1a, 0x94,
	0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0x64, 0xc2, 0xc5, 0x9d, 0x94, 0x99, 0x12, 0x5f, 0x04, 0xe1,
	0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x09, 0xeb, 0xc1, 0x34, 0x3a, 0x65, 0xa6, 0x40, 0x55,
	0x06, 0x71, 0x25, 0xc1, 0xd9, 0x4a, 0x2d, 0x8c, 0x5c, 0x82, 0x48, 0x46, 0x15, 0x17, 0xe4, 0xe7,
	0x15, 0xa7, 0x0a, 0xd9, 0x71, 0x71, 0x14, 0xa7, 0x82, 0x05, 0x8b, 0x25, 0x18, 0x15, 0x98, 0x35,
	0xb8, 0x8d, 0x94, 0xf4, 0xa0, 0x4e, 0xd3, 0xc3, 0x50, 0xad, 0x17, 0x0c, 0x51, 0x1a, 0x04, 0xd7,
	0x23, 0xa5, 0xcf, 0xc5, 0x0e, 0x15, 0x14, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x01, 0xbb, 0x86, 0x33,
	0x88, 0x29, 0x33, 0x45, 0x48, 0x84, 0x8b, 0xb5, 0x2c, 0x31, 0xa7, 0x34, 0x55, 0x82, 0x09, 0x2c,
	0x04, 0xe1, 0x38, 0x89, 0x72, 0x09, 0x27, 0xe7, 0xe7, 0xea, 0x41, 0x7d, 0x0d, 0xb3, 0x0b, 0x10,
	0x00, 0x00, 0xff, 0xff, 0x29, 0x2f, 0x17, 0xd3, 0x31, 0x01, 0x00, 0x00,
}
